pool:
  vmImage: 'Ubuntu 16.04'

variables:
  buildConfiguration: 'Debug'

stages:
- stage: Build
  displayName: 'Build Stage'

  jobs:
    - job: Build
      displayName: 'Build'
      pool:
        vmImage: 'Ubuntu 16.04'
      steps:    
      - task: DotNetCoreCLI@2
        displayName: 'dotnet build'
        inputs:
          command: build
          projects: '**/*Api/*.csproj'
          arguments: '--configuration $(buildConfiguration)'

      - task: DotNetCoreCLI@2
        displayName: 'dotnet test'
        enabled: false
        inputs:
          command: test
          projects: '**/*Test/*.csproj'
          arguments: '--configuration $(buildConfiguration)'

      - task: DotNetCoreCLI@2
        displayName: 'dotnet publish'
        inputs:
          command: publish
          publishWebProject: true
          arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)'
          zipAfterPublish: true

      - task: PublishBuildArtifacts@1
        displayName: 'publish artifact'
        inputs:
          PathtoPublish: '$(build.artifactstagingdirectory)'

- stage: Dev
  displayName: 'Deploy to dev'
  dependsOn: Build
  condition: succeeded()

  jobs:
  - deployment: Deploy
    displayName: 'Deploy'
    environment: 'greenfox-dev'
    pool:
      vmImage: 'Ubuntu 16.04'

    strategy:
      runOnce:
        deploy:

          steps:
          - task: DownloadBuildArtifacts@0
            displayName: 'download build artifact'
            inputs:
              artifactName: drop

          - task: AzureWebApp@1
            displayName: 'Deploy Azure WebApp'
            inputs:
              azureSubscription: 'greenfox-dev'
              appType: 'webApp'
              appName: 'app-greenfox-dev'
              package: '$(System.ArtifactsDirectory)/**/*.zip'
              deploymentMethod: 'auto'